@{
    ViewData["Title"] = "Upload";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Offline PDF Upload</title>
    <style>
        /* Your existing styles */
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .container {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
            width: 300px;
        }

        .container img {
            width: 80px;
        }

        h2 {
            font-size: 18px;
            color: #333;
            margin-bottom: 20px;
        }

        p {
            font-size: 10px;
            color: #333;
        }

        input[type="file"] {
            display: none;
        }

        label {
            display: inline-flex;
            align-items: center;
            border: 1px solid #ddd;
            padding: 10px 20px;
            border-radius: 5px;
            background-color: #f9f9f9;
            cursor: pointer;
            margin-bottom: 10px;
        }

        .divider {
            width: 1px;
            height: 20px;
            background-color: #ddd;
            margin: 0 10px;
        }

        #fileName {
            color: #777;
            font-size: 14px;
        }

        button {
            width: 80%;
            padding: 10px;
            background-color: #333;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

        .error-message {
            color: red;
            font-size: 14px;
            display: none;
            margin-top: 10px;
        }

        /* Modal styles */
        .error-modal, .success-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            width: 300px;
            text-align: center;
            lign-items: center;
        }

        .close-btn {
            cursor: pointer;
            color: #fff;
            background-color: #f44336;
            padding: 10px;
            border: none;
            border-radius: 5px;
            font-size: 16px;
        }

        .close-btn:hover {
            background-color: #d32f2f;
        }

        .success-btn {
            background-color: #4CAF50; /* Success color */
        }

        .success-btn:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>

    <img src="@Url.Content("~/images/upload.png")" alt="Upload Icon" class="upload-icon">
    <h2>Upload your PDF file</h2>

    <form action="/api/upload/uploadfile" method="post" enctype="multipart/form-data" id="uploadForm">
        <input type="hidden" name="sessionId" value="@ViewBag.SessionId" />
        <label for="fileInput">
            <span>Choose file</span>
            <div class="divider"></div> <!-- Divider line -->
            <span id="fileName">No file selected</span>
        </label>
        <input type="file" name="file" id="fileInput" accept=".pdf" />
        
        <button type="submit">Upload</button>
        <div class="error-message" id="errorMessage">Please upload a PDF file.</div>
    </form>

    <!-- Modal for error messages -->
    <div id="errorModal" class="error-modal">
        <div class="modal-content">
            <p id="modalMessage"></p>
            <button class="close-btn" id="closeModalBtn">Close</button>
        </div>
    </div>

    <!-- Modal for success messages -->
    <div id="successModal" class="success-modal">
        <div class="modal-content">
            <p id="successMessage">File uploaded successfully!</p>
            <button class="success-btn close-btn" id="closeSuccessModalBtn">Close</button>
        </div>
    </div>

<script>
   // Function to get the sessionId from the URL query parameters
function getSessionIdFromURL() {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get('sessionId'); // This retrieves the value of 'sessionId'
}

window.onload = function () {
    const sessionId = getSessionIdFromURL();

    // Display the session ID if available, otherwise show an error
    if (sessionId) {
        document.getElementById('sessionId').value = sessionId;  // Set the hidden input's value
        document.getElementById('sessionIdDisplay').textContent = "Session ID: " + sessionId;
    } else {
        // Show an error message if session ID is missing
        showErrorModal("A valid session ID is required to upload a file.");
    }
}

const fileInput = document.getElementById('fileInput');
const fileName = document.getElementById('fileName');
const errorMessage = document.getElementById('errorMessage');
const uploadForm = document.getElementById('uploadForm');
const modalMessage = document.getElementById('modalMessage');
const errorModal = document.getElementById('errorModal');
const successMessage = document.getElementById('successMessage');
const successModal = document.getElementById('successModal');

fileInput.addEventListener('change', function () {
    fileName.textContent = fileInput.files.length > 0 ? fileInput.files[0].name : "No file selected";
});

uploadForm.addEventListener('submit', function (event) {
    const file = fileInput.files[0];
    const sessionId = getSessionIdFromURL(); // Retrieve session ID from URL

    // Clear previous error message
    errorMessage.style.display = 'none';

    if (!sessionId) {
        event.preventDefault();
        showErrorModal("USE QR CODE TO UPLOAD FILE.");
    } else if (!file) {
        event.preventDefault();
        errorMessage.textContent = "No file selected.";
        errorMessage.style.display = 'block';
    } else if (!file.name.endsWith('.pdf')) {
        event.preventDefault();
        errorMessage.textContent = "Please upload a PDF file.";
        errorMessage.style.display = 'block';
    } else {
        event.preventDefault();
        // Simulate a successful file upload
        showSuccessModal("File uploaded successfully!");
    }
});

// Function to display the modal with a custom error message
function showErrorModal(message) {
    modalMessage.textContent = message;
    errorModal.style.display = 'flex';

      // Clear the form inputs except the session ID
    const sessionIdInput = document.querySelector('[name="sessionId"]');  // Select session ID input
    const sessionIdValue = sessionIdInput.value;  // Get the current session ID value

     // Reset the form (this clears all fields, including the file input)
    document.querySelector('form#uploadForm').reset(); 

    // Reassign the session ID back to the hidden field
    sessionIdInput.value = sessionIdValue;

    // Clear the file input field and reset file name text
    fileInput.value = ''; // Clear the file input
    fileName.textContent = "No file selected"; // Reset the file name text
}

// Function to display the modal with a custom success message
function showSuccessModal(message) {
    successMessage.textContent = message;
    successModal.style.display = 'flex';
}

// Close the error modal when the close button is clicked
document.getElementById('closeModalBtn').onclick = function () {
    errorModal.style.display = 'none';
}

// Close the success modal when the close button is clicked
document.getElementById('closeSuccessModalBtn').onclick = function () {
    successModal.style.display = 'none';
}

</script>

</body>
</html>
